diff --git a/common/Makefile b/common/Makefile
index a67728c..bb04d75 100644
--- a/common/Makefile
+++ b/common/Makefile
@@ -307,6 +307,7 @@ obj-y += cmd_disk.o
 
 # vpp module
 obj-y += cmd_vpp.o
+obj-y += hash_md5_sha.o pw_encrypt.o pw_encrypt_sha.o utils.o
 
 # amlogic commands
 obj-$(CONFIG_CMD_REBOOT) += cmd_reboot.o
diff --git a/common/autoboot.c b/common/autoboot.c
index 3658e14..b7e9f79 100644
--- a/common/autoboot.c
+++ b/common/autoboot.c
@@ -142,6 +142,62 @@ static int abortboot_keyed(int bootdelay)
 static int menukey;
 #endif
 
+#define CONFIG_UBOOT_PWD 1
+#ifdef CONFIG_UBOOT_PWD
+#include "pw_encrypt.h"
+int my_pw_encrypt(void)
+{
+    char pwd[1024] = { 0 };
+    char c = 0;
+    int index = 0;
+	int cnt = 0;
+	int ret = 0;
+	char *encrypted = NULL;
+	char *pw_pass = "$5$WobXo4uCl0MG5muc$AONKNr.tZHDAXv19yyH2CG6CF0D/f9u3a4s1Rqbice1";
+    static int bPwd = 1;
+
+    while (bPwd && cnt < 6){
+        printf("### Please input uboot password: ###\n");
+        index = 0;
+        while ((c = getc()) != '\r'){
+            if (c == 8) /* Backspace */
+            {
+                if (index > 0){
+                    printf ("\b \b");
+                    index--;
+                }
+                continue;
+            }
+//          else if (c == 3){ /* Ctrl + c */
+//              do_reset();
+//          }
+            putc('*');
+            pwd[index] = c;
+            index++;
+        }
+        pwd[index] = '\0';
+        putc ('\n');
+        char *s;
+        s = getenv ("bootdelaykey");
+        if (!s){
+			ret = 1;
+			break;
+        }
+
+		encrypted = pw_encrypt(pwd, pw_pass);
+        if (!strcmp (pw_pass, encrypted)){
+            bPwd = 0;
+			ret = 1;
+        }else
+			cnt++;
+		if(NULL != encrypted)
+		    free(encrypted);
+    }
+
+	return ret;
+}
+#endif
+
 static int abortboot_normal(int bootdelay)
 {
 	int abort = 0;
@@ -202,6 +258,8 @@ static int abortboot_normal(int bootdelay)
 		gd->flags &= ~GD_FLG_SILENT;
 #endif
 
+    if(abort)
+        return my_pw_encrypt();
 	return abort;
 }
 # endif	/* CONFIG_AUTOBOOT_KEYED */
